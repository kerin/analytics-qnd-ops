apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  name: {{ .cluster_name }}
spec:
  additionalPolicies:
    node: |
      [
        {
          "Action": [
            "sts:AssumeRole"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "ecr:DescribeImages",
            "ecr:InitiateLayerUpload",
            "ecr:UploadLayerPart",
            "ecr:CompleteLayerUpload",
            "ecr:PutImage",
            "ecr:CreateRepository"
          ],
          "Resource": "*"
        }
      ]
  api:
    loadBalancer:
      type: Public
  authorization:
    alwaysAllow: {}
  channel: alpha
  cloudProvider: aws
  configBase: {{ .kops_state_store }}/{{ .cluster_name }}
  dnsZone: {{ .dns_zone_id }}
  etcdClusters:
  - etcdMembers:
{{- range split .availability_zones "," }}
    - instanceGroup: master-{{ . }}
      name: {{ . }}
{{- end }}
    name: main
  - etcdMembers:
{{- range split .availability_zones "," }}
    - instanceGroup: master-{{ . }}
      name: {{ . }}
{{- end }}
    name: events
  kubeAPIServer:
    runtimeConfig:
      batch/v2alpha1: "true"
  kubernetesApiAccess:
  - 0.0.0.0/0
  kubernetesVersion: 1.6.6
  masterInternalName: api.internal.{{ .cluster_name }}
  masterPublicName: api.{{ .cluster_name }}
  networkCIDR: {{ .vpc_cidr }}
  networkID: {{ .vpc_id }}
  networking:
    calico: {}
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 0.0.0.0/0
  subnets:
{{ range split .private_subnets "," }}
  {{- $subnet_id_and_zone := split . "=" }}
  - id: {{ index $subnet_id_and_zone 0 }}
    name: {{ index $subnet_id_and_zone 1 }}
    type: Private
    zone: {{ index $subnet_id_and_zone 1 }}
    {{ range split $.dmz_subnets "," -}}
      {{- $dmz_subnet_id_and_zone := split . "=" -}}
      {{- range split $.nat_gateway_subnets "," -}}
        {{- $gw_id_and_subnet_id := split . "=" -}}
        {{ if eq (index $dmz_subnet_id_and_zone 1) (index $subnet_id_and_zone 1) -}}
          {{- if eq (index $gw_id_and_subnet_id 0) (index $dmz_subnet_id_and_zone 0) -}}
    egress: {{ index $gw_id_and_subnet_id 1 }}
          {{- end -}}
        {{- end -}}
      {{- end -}}
    {{- end }}
{{ end }}
{{ range split .dmz_subnets "," }}
  {{- $subnet_id_and_zone := split . "=" }}
  - id: {{ index $subnet_id_and_zone 0 }}
    name: dmz-{{ index $subnet_id_and_zone 1 }}
    type: Utility
    zone: {{ index $subnet_id_and_zone 1 }}
{{ end }}
  topology:
    bastion:
      bastionPublicName: bastion.{{ .cluster_name }}
    dns:
      type: Public
    masters: private
    nodes: private
